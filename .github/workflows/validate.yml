name: validate
on:
  push:
    #branches:
    #  - dev
  #pull_request_target:
  #  types: [opened, synchronize]

jobs:
  build-unix:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        type: [ Release ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: appimage
          submodules: recursive
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-z64re-ccache-${{ matrix.type }}
      - name: Install Linux Dependencies
        if: runner.os == 'Linux'
        run: >
          sudo apt-get update &&
          sudo apt install -y ninja-build libgtk-3-dev lld llvm clang-15 libfreetype-dev libfuse2 
          binutils-mips-linux-gnu python3-pip python3-venv libpng-dev

      - name: Install SDL2 Dependencies
        if: runner.os == 'Linux'
        run: |
          # Install SDL2
          echo ::group::install SDL2

          # Enable ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

          wget https://www.libsdl.org/release/SDL2-2.26.1.tar.gz
          tar -xzf SDL2-2.26.1.tar.gz
          cd SDL2-2.26.1
          ./configure
          make -j 10
          sudo make install
          sudo cp -av /usr/local/lib/libSDL* /lib/x86_64-linux-gnu/
          echo ::endgroup::
      - name: Clone MMret
        run: |-
          git clone https://github.com/zeldaret/mm.git
          cd mm
          git checkout 23beee0717364de43ca9a82957cc910cf818de90
          curl -sSfL ${{ secrets.BASEROM }} -o baserom.mm.us.rev1.z64
          md5sum baserom.mm.us.rev1.z64
          python3 -m pip install --no-cache-dir -r requirements.txt
          sed -i '1115,/insn.isJump/{s/insn.isJump/insn.isJumpWithAddress/}' tools/disasm/disasm.py
          CC_CHECK_COMP='ccache gcc' make init
          cp mm.us.rev1.rom_uncompressed.z64 ..
          cp mm.us.rev1.rom_uncompressed.elf ..
          
      - name: Build N64Recomp & RSPRecomp
        if: runner.os != 'Windows'
        run: |
          git clone https://github.com/Mr-Wiseguy/N64Recomp.git --recurse-submodules N64RecompSource
          cd N64RecompSource
          
          # enable ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          
          # Build N64Recomp & RSPRecomp
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER=g++-11 -DCMAKE_C_COMPILER=gcc-11 -DCMAKE_MAKE_PROGRAM=ninja -G Ninja -S . -B cmake-build
          cmake --build cmake-build --config Release --target N64Recomp -j 8
          cmake --build cmake-build --config Release --target RSPRecomp -j 8
          
          # Copy N64Recomp & RSPRecomp to root directory
          cp cmake-build/N64Recomp ..
          cp cmake-build/RSPRecomp ..
      - name: Run N64Recomp & RSPRecomp
        run: |
          ./N64Recomp us.rev1.toml
          ./RSPRecomp aspMain.us.rev1.toml
          ./RSPRecomp njpgdspMain.us.rev1.toml
      - name: Build ZeldaRecomp
        run: |-
          # enable ccache
          export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
          
          cmake -DCMAKE_BUILD_TYPE=${{ matrix.type }} -DCMAKE_CXX_COMPILER_LAUNCHER=ccache -DCMAKE_C_COMPILER_LAUNCHER=ccache -DCMAKE_CXX_COMPILER=clang++-15 -DCMAKE_C_COMPILER=clang-15 -DCMAKE_MAKE_PROGRAM=ninja -G Ninja -S . -B cmake-build
          cmake --build cmake-build --config ${{ matrix.type }} --target Zelda64Recompiled -j 8
      - name: Prepare Archive
        run: |
          mv cmake-build/Zelda64Recompiled Zelda64Recompiled
          rm -rf assets/scss
          tar -czf Zelda64Recompiled-${{ runner.os }}-${{ matrix.type }}.tar.gz Zelda64Recompiled assets/
      - name: Archive Zelda64Recomp
        uses: actions/upload-artifact@v4
        with:
          name: Zelda64Recompiled-${{ runner.os }}-${{ matrix.type }}
          path: Zelda64Recompiled-${{ runner.os }}-${{ matrix.type }}.tar.gz

      - name: Build ZeldaRecomp
        run: |-
          chmod +x .github/linux/appimage.sh
          ./.github/linux/appimage.sh
          
      - name: Zelda64Recomp AppImage
        uses: actions/upload-artifact@v4
        with:
          name: Zelda64Recompiled-AppImage
          path: Zelda64Recompiled-x86_64.AppImage
